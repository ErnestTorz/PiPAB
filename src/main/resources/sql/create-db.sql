-- Usuń cały schemat public (zawiera wszystkie tabele, sekwencje itd.)
DROP SCHEMA public CASCADE;

-- Tworzenie tabel

-- Tabela: Grupa
DROP TABLE Grupa if exists;
CREATE TABLE Grupa (
    grupa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nazwa VARCHAR(25)
);

-- Tabela: Student
DROP TABLE Student if exists;
CREATE TABLE Student (
    student_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    imie VARCHAR(50),
    nazwisko VARCHAR(50),
    login VARCHAR(50) UNIQUE,
    indeks INTEGER UNIQUE,
    email VARCHAR(100) UNIQUE,
    haslo VARCHAR(200),
    token_reset_password VARCHAR(200),
    status_konta VARCHAR(20),
    licznik_nieudanych_logowan INTEGER,
    data_ostatniego_logowania TIMESTAMP,
    grupa_id INTEGER REFERENCES Grupa(grupa_id)
);

-- Tabela: Ksiazka
DROP TABLE Ksiazka if exists;
CREATE TABLE Ksiazka (
    ksiazka_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tytul VARCHAR(150),
    autor VARCHAR(75),
    rok_wydania INTEGER
);

-- Tabela: Wypozyczenie
DROP TABLE Wypozyczenie if exists;
CREATE TABLE Wypozyczenie (
    wypozyczenie_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER REFERENCES Student(student_id),
    ksiazka_id INTEGER REFERENCES Ksiazka(ksiazka_id),
    data_wypozyczenia DATE,
    data_zwrotu DATE,
    status VARCHAR(25)
);

-- Tabela: Wykladowca
DROP TABLE Wykladowca if exists;
CREATE TABLE Wykladowca (
    wykladowca_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    imie VARCHAR(50),
    nazwisko VARCHAR(50),
    email VARCHAR(100) UNIQUE
);

-- Tabela: Przedmiot
DROP TABLE Przedmiot if exists;
CREATE TABLE Przedmiot (
    przedmiot_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nazwa VARCHAR(100),
    kod_przedmiotu VARCHAR(200),
    opis VARCHAR(1000),
    liczba_miejsc INTEGER,
    forma_zaliczenia VARCHAR(30),
    punkty_ects INTEGER,
    liczba_godzin INTEGER,
    wykladowca_id INTEGER REFERENCES Wykladowca(wykladowca_id)
);

-- Tabela: Zapis_na_przedmiot
DROP TABLE Zapis_na_przedmiot if exists;
CREATE TABLE Zapis_na_przedmiot (
    zapis_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER REFERENCES Student(student_id),
    przedmiot_id INTEGER REFERENCES Przedmiot(przedmiot_id),
    data_zapisu DATE,
    status VARCHAR(20),
    termin_rezygnacji DATE,
    lista_rezerwowa BOOLEAN,
    zaliczone BOOLEAN
);

-- Tabela: Ocena
DROP TABLE Ocena if exists;
CREATE TABLE Ocena (
    ocena_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER REFERENCES Student(student_id),
    przedmiot_id INTEGER REFERENCES Przedmiot(przedmiot_id),
    wartosc_oceny DECIMAL,
    komentarz VARCHAR(1000),
    typ_oceny VARCHAR(25),
    data_oceny DATE
);

-- Tabela: Harmonogram_zajec
DROP TABLE Harmonogram_zajec if exists;
CREATE TABLE Harmonogram_zajec (
    zajecia_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dzien_tygodnia VARCHAR(15),
    godzina_rozpoczecia TIME,
    godzina_zakonczenia TIME,
    sala VARCHAR(10),
    grupa_id INTEGER REFERENCES Grupa(grupa_id),
    przedmiot_id INTEGER REFERENCES Przedmiot(przedmiot_id),
    wykladowca_id INTEGER REFERENCES Wykladowca(wykladowca_id)
);

-- Tabela: Platnosc
DROP TABLE Platnosc if exists;
CREATE TABLE Platnosc (
    platnosc_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id INTEGER REFERENCES Student(student_id),
    kwota DECIMAL,
    status VARCHAR(20),
    data_wplaty DATE
);
